@{
    Layout = "_Root.Head";
}
@{
    var homePageMainSliderHtml = String.Empty;
    var additionalClass = String.Empty;

    var ajaxFiltersProHtml = String.Empty;

    var controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();

    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);
    if (isHomePage)
    {
        var homePageMainSliderResult = await Component.InvokeAsync("Widget", new { widgetZone = "home_page_main_slider" });
        homePageMainSliderHtml = homePageMainSliderResult.ToHtmlString();
        additionalClass = "with_slider";

        var ajaxFiltersProResult = await Component.InvokeAsync("Widget", new { widgetZone = "home_page_search_widget" });
        ajaxFiltersProHtml = ajaxFiltersProResult.ToHtmlString();
    }
}

@await Component.InvokeAsync("Widget", new { widgetZone = "body_start_html_tag_after" })
@await Html.PartialAsync("_Notifications")
@await Html.PartialAsync("_JavaScriptDisabledWarning")
@await Html.PartialAsync("_OldInternetExplorerWarning")

@await Component.InvokeAsync("AdminHeaderLinks")

<div class="master-wrapper-page @additionalClass">
    <div class="master-wrapper-content">
    	<script type="text/javascript" asp-location="Footer">
            AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart');
        </script>

        @await Html.PartialAsync("_Header")

        @{
            var menu = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
        }

        <div class="header-menu">
            @if (String.IsNullOrEmpty(menu.ToHtmlString()))
            {
                @await Component.InvokeAsync("TopMenu")
            }
            else
            {
                @menu
            }
        </div>

        <div class="main-slider-wrapper">
            @Html.Raw(homePageMainSliderHtml)
            @Html.Raw(ajaxFiltersProHtml)
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = "content_before" })
        @*ajax loading window*@
        <div class="ajax-loading-block-window" style="display: none">
            <div class="loading-image">
            </div>
        </div>

        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = "content_after" })

        @await Component.InvokeAsync("Footer")
    </div>
</div>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = "body_end_html_tag_before" })
